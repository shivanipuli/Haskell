1
-2
3
 4
 5^2
 - 6
(7)
 ( 8 )
9 + 1
10 + -1
-11 + 1
-12 + -1
((13+1) )
14 + 1 + 2
15 + 1 - 2
16 - 1 + 2
(17 - 1 - 2)
18 + 1 * 2
  19/2*5
20/(2*5)
20/(-2*5)
20/(2*-5)
3 + 10 ^ 2 * 2
-3^2 + 2
(-2)^3
2^3^2
5--3
 100 / 2 / 2
 5 * - 10 + 2 - 1 + 4 * 3 / 2 * 3 - 4 - 5 + 2
(1 + (2 + ((4 + 2) * 6))) - (-2 + -3)
  ( ( 1  + ( 2 + ( ( 4 + 2 ) * 6 ) ) ) - ( -2 + -3 ) )
let x = 0 in x*10
let two = 2 in (two*10)
  let   x   =   3   +   5   in   (x*x + 2)/2
let var = (1+2) in var*var
let (x1, x2) = (-4, 5) in -x1-x1+x2
let (a,b,c) = (3,4,6-2) in a*a + b*b - c*c
let (a,b,hypot) = (3,4,5) in a^2 + b^2 - hypot^2
let validVarName = 2^5 in validVarName * (validVarName)
let  ( r2d2 , c3po )  =  ( ( 2^2 ) , ( 3 + (0) ) )  in   r2d2  + c3po